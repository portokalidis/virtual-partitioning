#!/bin/bash 

if [[ -z "$ISR_HOME" || ! -d "$ISR_HOME" ]]; then
	echo "ISR_HOME variable is not set"
	exit 1
fi
if [[ ! -r "$ISR_HOME/isr.conf" ]]; then
	echo "ISR_HOME not set properly. Cannot find isr.conf"
	exit 1
fi

. $ISR_HOME/isr.conf

verbose=0

function quit {
	rm $encname
	exit 1
}

function usage {
	echo "Usage: $0 original_binary [destination_dir]"
	exit 1
}

if [ $# -lt 1 ]; then
	usage
elif [ $# -gt 1 ]; then
	dest="$2"
else
	dest="."
fi

bin=`which $1 2> /dev/null`
if [ -z "$bin" ]; then
	echo "Cannot find binary $1"
	usage
fi
biname=`basename $bin`

# Generate a temp. name
#echo "mktemp -p $ISR_HOME $biname-XXXXXX"
encname=`mktemp -p $dest $biname-XXXXXX`
if [ -z "$encname" ]; then
	exit 1
fi
encname=`readlink -f $encname`


# Generate a random key
generate_key
#echo "Key $enckey"

# Encrypt binary
#echo "$OBJCP $enckey $bin $encname"
$OBJCP 0x$enckey $bin $encname || quit
chmod `stat --format="%a" $bin` $encname || quit

# Add key in DB
sqlstmt="BEGIN TRANSACTION; insert into image_key (key) values (x'$enckey'); insert into image values ('$encname', (select last_insert_rowid())); COMMIT TRANSACTION;"
#echo $SQLITE $DBFILE "$sqlstmt"
$SQLITE $DBFILE "$sqlstmt" || quit

echo $encname
